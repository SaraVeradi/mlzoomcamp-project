# -*- coding: utf-8 -*-
"""predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TtCycvRMTLI_B0ik5vvhRUkC8U0dkyrV
"""
from sklearn.feature_extraction import DictVectorizer
from sklearn.preprocessing      import StandardScaler
from sklearn.preprocessing      import PolynomialFeatures
from sklearn.linear_model       import LinearRegression
import pickle
import numpy
from flask import Flask, request, jsonify

model_file = "calories.bin"
with open(model_file, 'rb') as f_in:
    dv, model = pickle.load(f_in)




app =Flask('calories')
@app.route('/predict', methods=['POST'])
def predict():
    exc = request.get_json()
    

    # mean of the model

    X_mean = numpy.array([-8.03369716e-17, -1.23359372e-13,  1.44836192e-13, -6.94012749e-17,
       -3.78215977e-17, -2.55104579e-17, -1.56664805e-17, -5.96060238e-15,
        1.00074270e-17])

    X_std = numpy.array([1., 1., 1., 1., 1., 1., 1., 1., 1.])
    # turn the exc into a feature matrix
    X = dv.transform([exc])
    scaled_X = (X - mean_train)/std_train
    poly_features_X = PolynomialFeatures(degree=4, include_bias=False)
    X_poly = poly_features_X.fit_transform(scaled_X)
    y_pred = model.predict(X_poly)[0,0]

    result = {
        'calories burnt': float(y_pred)
    }
    
    return jsonify(result)


if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=9696)